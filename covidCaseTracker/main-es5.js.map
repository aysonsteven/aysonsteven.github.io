{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dto/covid.dto.ts","webpack:///src/app/pages/app-routing.module.ts","webpack:///src/app/pages/countries/countries.page.ts","webpack:///src/app/pages/countries/countries.page.html","webpack:///src/app/pages/global/globa.page.ts","webpack:///src/app/pages/global/global.page.html","webpack:///src/app/pages/page.module.ts","webpack:///src/app/service/covid.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","covidService","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","GlobalData","updated","Date","CountryData","countryInfo","CountryInfo","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","CountriesPage","countries","Array","selectedCountry","displayDialog","interV","setInterval","getAllCountryInfo","clearInterval","getAllCountries","data","error","sortOptions","label","value","event","indexOf","sortOrder","sortField","substring","length","country","preventDefault","onSortChange","onDialogHide","GlobalPage","global","getGlobalData","getAllGlobalInfo","console","log","PageModule","ROOT_PATH","CovidService","httpClient","successCallback","failedCallback","get","subscribe","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { CovidService } from './service/covid.service';\nimport { GlobalData } from './dto/covid.dto';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'COVIDTracker';\n\n  constructor(covidService: CovidService){\n  }\n\n  ngOnInit() {\n  }\n\n\n}\n","<div class=\"ui inverted menu\">\r\n    <div class=\"ui container\">\r\n        <div class=\"header item\" routerLink=\"/global\">\r\n            Global\r\n        </div>\r\n        <div class=\"header item\" routerLink=\"/countries\">\r\n            Countries\r\n        </div>\r\n            \r\n    </div>\r\n</div>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// import { AppRoutingModule } from './pages/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { PageModule } from './pages/page.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    PageModule,\n    RouterModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    CommonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class GlobalData {\r\n    updated: Date = new Date();\r\n    cases: number;\r\n    todayCases: number;\r\n    deaths: number;\r\n    todayDeaths: number;\r\n    recovered: number;\r\n    active: number;\r\n    critical: number;\r\n    casesPerOneMillion: number;\r\n    deathsPerOneMillion: number;\r\n    tests: number;\r\n    testsPerOneMillion: number;\r\n    affectedCountries: number;\r\n}\r\n\r\nexport class CountryData {\r\n    country: string;\r\n    // tslint:disable-next-line: no-use-before-declare\r\n    countryInfo: CountryInfo = new CountryInfo();\r\n    updated: Date = new Date();\r\n    cases: number;\r\n    todayCases: number;\r\n    deaths: number;\r\n    todayDeaths: number;\r\n    recovered: number;\r\n    active: number;\r\n    critical: number;\r\n    casesPerOneMillion: number;\r\n    deathsPerOneMillion: number;\r\n    tests: number;\r\n    testsPerOneMillion: number;\r\n}\r\n\r\nexport class CountryInfo {\r\n    // tslint:disable-next-line: variable-name\r\n    _id: number;\r\n    iso2: string;\r\n    iso3: string;\r\n    lat: number;\r\n    long: number;\r\n    flag: string;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GlobalPage } from './global/globa.page';\nimport { CountriesPage } from './countries/countries.page';\n\n\n\nconst routes: Routes = [\n  { path : 'global', component: GlobalPage },\n  { path: '', redirectTo: '/global', pathMatch: 'full'},\n  { path: 'countries', component: CountriesPage}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CovidService } from 'src/app/service/covid.service';\r\nimport { CountryData } from 'src/app/dto/covid.dto';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\n\r\n@Component({\r\n    templateUrl: 'countries.page.html',\r\n    styleUrls: ['countries.page.scss']\r\n})\r\n\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class CountriesPage implements OnInit, OnDestroy {\r\n    countries: CountryData[] = new Array<CountryData>();\r\n    selectedCountry: CountryData = new CountryData();\r\n    sortOptions: SelectItem[];\r\n    sortField: string;\r\n    sortKey: string;\r\n\r\n    interV: any;\r\n\r\n    sortOrder: number;\r\n    // tslint:disable-next-line: no-inferrable-types\r\n    displayDialog: boolean = false;\r\n    constructor(private covidService: CovidService) { }\r\n\r\n    ngOnInit() {\r\n        this.interV = setInterval( () => {\r\n            this.getAllCountryInfo();\r\n         }, 5000);\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        clearInterval(this.interV);\r\n    }\r\n\r\n    getAllCountryInfo(){\r\n        this.covidService.getAllCountries(data => {\r\n            this.countries = data;\r\n        }, error => {});\r\n        this.sortOptions = [\r\n            {label: 'Descending', value: '!country'},\r\n            {label: 'Ascending', value: 'country'},\r\n            {label: 'Cases', value: '!cases'}\r\n        ];\r\n    }\r\n    onSortChange(event) {\r\n        const value = event.value;\r\n\r\n        if (value.indexOf('!') === 0) {\r\n            this.sortOrder = -1;\r\n            this.sortField = value.substring(1, value.length);\r\n        } else {\r\n            this.sortOrder = 1;\r\n            this.sortField = value;\r\n        }\r\n    }\r\n\r\n    onDialogHide(){\r\n        this.selectedCountry = new CountryData();\r\n    }\r\n\r\n\r\n    selectCountry(event: Event, country: CountryData) {\r\n        this.selectedCountry = country;\r\n        this.displayDialog = true;\r\n        event.preventDefault();\r\n    }\r\n}\r\n","<!-- <div class=\"ui items\" *ngFor=\"let country of countries\">\r\n    <div class=\"item\">\r\n        <div class=\"image\">\r\n            <img [src]=\"country.countryInfo.flag\">\r\n        </div>\r\n        <div class=\"content\">\r\n            <a class=\"header\">{{country.country}}</a>\r\n            <div class=\"meta\">\r\n                <span>Description</span>\r\n            </div>\r\n            <div class=\"description\">\r\n                <p></p>\r\n            </div>\r\n            <div class=\"extra\">\r\n                Additional Details\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n\r\n<p-dataView #dv [value]=\"countries\" [paginator]=\"true\" [rows]=\"20\" paginatorPosition=\"both\" filterBy=\"country\"\r\n    [sortField]=\"sortField\" [sortOrder]=\"sortOrder\">\r\n    <p-header>\r\n        <div class=\"ui-helper-clearfix\">\r\n            <div class=\"ui-g\">\r\n                <div class=\"ui-g-12 ui-md-4\">\r\n                    <p-dropdown [options]=\"sortOptions\" [(ngModel)]=\"sortKey\" placeholder=\"Sort By\"\r\n                        (onChange)=\"onSortChange($event)\" [style]=\"{'min-width':'140px'}\"></p-dropdown>\r\n                </div>\r\n                <div class=\"ui-g-6 ui-md-4 filter-container\">\r\n                    <div style=\"position:relative\">\r\n                        <input type=\"search\" pInputText placeholder=\"Search by Country\"\r\n                            (input)=\"dv.filter($event.target.value)\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"ui-g-6 ui-md-4\" style=\"text-align:right\">\r\n                    <p-dataViewLayoutOptions></p-dataViewLayoutOptions>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </p-header>\r\n\r\n    <!-- ListView -->\r\n    <ng-template let-country pTemplate=\"listItem\">\r\n        <div class=\"ui-g-12\">\r\n            <div class=\"country-details\">\r\n                <div>\r\n                    <div class=\"ui-g-3\">\r\n                        <img [src]=\"country.countryInfo.flag\" height=\"90px\" width=\"90px\">\r\n                    </div>\r\n\r\n                    <div class=\"ui-g-8\">\r\n                        <div class=\"ui-g-12\">Updated: <b>{{country.updated | date:'medium'}}</b></div>\r\n                        <div class=\"ui-g-12\">Cases: <b>{{country.cases}}</b></div>\r\n                        <div class=\"ui-g-12\">Deaths: <b>{{country.deaths}}</b></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"ui-g-1\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"selectCountry($event, country)\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <!-- GridView -->\r\n    <ng-template let-country pTemplate=\"gridItem\">\r\n        <div style=\"padding:.5em\" class=\"ui-g-12 ui-md-3\">\r\n            <p-panel [header]=\"country.country\" [style]=\"{'text-align':'center'}\">\r\n                <img [src]=\"country.countryInfo.flag\" width=\"60\">\r\n                <div class=\"car-detail\">{{country.country}} ({{country.countryInfo.iso2}}) </div>\r\n                <hr class=\"ui-widget-content\" style=\"border-top:0\">\r\n                <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"selectCountry($event, country)\"\r\n                    style=\"margin-top:0\"></button>\r\n            </p-panel>\r\n        </div>\r\n    </ng-template>\r\n</p-dataView>\r\n\r\n<p-dialog header=\"{{selectedCountry.country}} Details\" [(visible)]=\"displayDialog\" [responsive]=\"true\" showEffect=\"fade\"\r\n    [modal]=\"true\" [style]=\"{width: '380px'}\" (onAfterHide)=\"onDialogHide()\">\r\n    <div class=\"ui-g\" *ngIf=\"selectedCountry\">\r\n        <div class=\"ui-g-12\" style=\"text-align:center\">\r\n            <img [src]=\"selectedCountry.countryInfo.flag\">\r\n        </div>\r\n        <div class=\"ui-g-4\">Updated: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.updated | date: 'medium'}}</div>\r\n\r\n        <div class=\"ui-g-4\">Cases: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.cases}}</div>\r\n\r\n        <div class=\"ui-g-4\">Today's Cases: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.todayCases}}</div>\r\n\r\n        <div class=\"ui-g-4\">Total deaths: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.deaths}}</div>\r\n\r\n        <div class=\"ui-g-4\">Today's deaths: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.todayDeaths}}</div>\r\n\r\n        <div class=\"ui-g-4\">Recovered: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.recovered}}</div>\r\n\r\n        <div class=\"ui-g-4\">Active Case: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.active}}</div>\r\n\r\n        <div class=\"ui-g-4\">Critical: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.critical}}</div>\r\n    </div>\r\n</p-dialog>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CovidService } from 'src/app/service/covid.service';\r\nimport { GlobalData } from 'src/app/dto/covid.dto';\r\n\r\n@Component({\r\n    templateUrl: 'global.page.html',\r\n    styleUrls: ['global.page.scss']\r\n})\r\n\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class GlobalPage implements OnInit, OnDestroy {\r\n    interV: any;\r\n    global: GlobalData = new GlobalData();\r\n    constructor(private covidService: CovidService) { }\r\n\r\n    ngOnInit() {\r\n        this.interV = setInterval(() => {\r\n            this.getGlobalData();\r\n        }, 5000);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        clearInterval(this.interV);\r\n    }\r\n\r\n    getGlobalData() {\r\n        this.covidService.getAllGlobalInfo(data => {\r\n            this.global = data;\r\n        }, error => { console.log(error)});\r\n    }\r\n}\r\n","<table class=\"ui celled table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Last Updated</th>\r\n            <th>Cases</th>\r\n            <th>Cases Today</th>\r\n            <th>Deaths</th>\r\n            <th>Recovered</th>\r\n            <th>Active Cases</th>\r\n            <th>Critical</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td data-label=\"Updated\">{{global.updated | date:'medium'}}</td>\r\n            <td data-label=\"Cases\">{{global.cases | number}}</td>\r\n            <td data-label=\"CasesToday\">{{global.todayCases | number}}</td>\r\n            <td>{{global.deaths | number}}</td>\r\n            <td>{{global.recovered | number}}</td>\r\n            <td>{{global.active | number}}</td>\r\n            <td>{{global.critical | number}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { NgModule } from '@angular/core';\r\nimport { GlobalPage } from './global/globa.page';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CountriesPage } from './countries/countries.page';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {DataViewModule} from 'primeng/dataview';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {DialogModule} from 'primeng/dialog';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        AppRoutingModule,\r\n        DataViewModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        PanelModule,\r\n        ButtonModule,\r\n        InputTextModule,\r\n        DropdownModule,\r\n        DialogModule,\r\n    ],\r\n    exports: [\r\n        GlobalPage,\r\n        CountriesPage\r\n    ],\r\n    declarations: [\r\n        GlobalPage,\r\n        CountriesPage\r\n    ],\r\n    providers: [],\r\n})\r\nexport class PageModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nconst ROOT_PATH  = 'https://corona.lmao.ninja/';\r\n@Injectable({providedIn: 'root'})\r\nexport class CovidService {\r\n    constructor(private httpClient: HttpClient) {\r\n    }\r\n\r\n    getAllGlobalInfo(successCallback, failedCallback) {\r\n        this.httpClient.get(ROOT_PATH + 'all').subscribe( data => {\r\n            successCallback(data);\r\n        });\r\n    }\r\n\r\n    getAllCountries(successCallback, failedCallback) {\r\n        this.httpClient.get(ROOT_PATH + 'countries?sort=country').subscribe( data => {\r\n            successCallback(data);\r\n        });\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}