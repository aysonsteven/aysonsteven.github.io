{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dto/covid.dto.ts","./src/app/pages/app-routing.module.ts","./src/app/pages/countries/countries.page.ts","./src/app/pages/countries/countries.page.html","./src/app/pages/global/globa.page.ts","./src/app/pages/global/global.page.html","./src/app/pages/page.module.ts","./src/app/service/covid.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { CovidService } from './service/covid.service';\nimport { GlobalData } from './dto/covid.dto';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  title = 'COVIDTracker';\n\n  constructor(covidService: CovidService){\n  }\n\n  ngOnInit() {\n  }\n\n\n}\n","<div class=\"ui inverted menu\">\r\n    <div class=\"ui container\">\r\n        <div class=\"header item\" routerLink=\"/global\">\r\n            Global\r\n        </div>\r\n        <div class=\"header item\" routerLink=\"/countries\">\r\n            Countries\r\n        </div>\r\n            \r\n    </div>\r\n</div>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n// import { AppRoutingModule } from './pages/app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { PageModule } from './pages/page.module';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    PageModule,\n    RouterModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    CommonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export class GlobalData {\r\n    updated: Date = new Date();\r\n    cases: number;\r\n    todayCases: number;\r\n    deaths: number;\r\n    todayDeaths: number;\r\n    recovered: number;\r\n    active: number;\r\n    critical: number;\r\n    casesPerOneMillion: number;\r\n    deathsPerOneMillion: number;\r\n    tests: number;\r\n    testsPerOneMillion: number;\r\n    affectedCountries: number;\r\n}\r\n\r\nexport class CountryData {\r\n    country: string;\r\n    // tslint:disable-next-line: no-use-before-declare\r\n    countryInfo: CountryInfo = new CountryInfo();\r\n    updated: Date = new Date();\r\n    cases: number;\r\n    todayCases: number;\r\n    deaths: number;\r\n    todayDeaths: number;\r\n    recovered: number;\r\n    active: number;\r\n    critical: number;\r\n    casesPerOneMillion: number;\r\n    deathsPerOneMillion: number;\r\n    tests: number;\r\n    testsPerOneMillion: number;\r\n}\r\n\r\nexport class CountryInfo {\r\n    // tslint:disable-next-line: variable-name\r\n    _id: number;\r\n    iso2: string;\r\n    iso3: string;\r\n    lat: number;\r\n    long: number;\r\n    flag: string;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { GlobalPage } from './global/globa.page';\nimport { CountriesPage } from './countries/countries.page';\n\n\n\nconst routes: Routes = [\n  { path : 'global', component: GlobalPage },\n  { path: '', redirectTo: '/global', pathMatch: 'full'},\n  { path: 'countries', component: CountriesPage}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CovidService } from 'src/app/service/covid.service';\r\nimport { CountryData } from 'src/app/dto/covid.dto';\r\nimport { SelectItem } from 'primeng/api/selectitem';\r\n\r\n@Component({\r\n    templateUrl: 'countries.page.html',\r\n    styleUrls: ['countries.page.scss']\r\n})\r\n\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class CountriesPage implements OnInit, OnDestroy {\r\n    countries: CountryData[] = new Array<CountryData>();\r\n    selectedCountry: CountryData = new CountryData();\r\n    sortOptions: SelectItem[];\r\n    sortField: string;\r\n    sortKey: string;\r\n\r\n    interV: any;\r\n\r\n    sortOrder: number;\r\n    // tslint:disable-next-line: no-inferrable-types\r\n    displayDialog: boolean = false;\r\n    constructor(private covidService: CovidService) { }\r\n\r\n    ngOnInit() {\r\n        this.interV = setInterval( () => {\r\n            this.getAllCountryInfo();\r\n         }, 5000);\r\n    }\r\n\r\n    ngOnDestroy(){\r\n        clearInterval(this.interV);\r\n    }\r\n\r\n    getAllCountryInfo(){\r\n        this.covidService.getAllCountries(data => {\r\n            this.countries = data;\r\n        }, error => {});\r\n        this.sortOptions = [\r\n            {label: 'Descending', value: '!country'},\r\n            {label: 'Ascending', value: 'country'},\r\n            {label: 'Cases', value: '!cases'}\r\n        ];\r\n    }\r\n    onSortChange(event) {\r\n        const value = event.value;\r\n\r\n        if (value.indexOf('!') === 0) {\r\n            this.sortOrder = -1;\r\n            this.sortField = value.substring(1, value.length);\r\n        } else {\r\n            this.sortOrder = 1;\r\n            this.sortField = value;\r\n        }\r\n    }\r\n\r\n    onDialogHide(){\r\n        this.selectedCountry = new CountryData();\r\n    }\r\n\r\n\r\n    selectCountry(event: Event, country: CountryData) {\r\n        this.selectedCountry = country;\r\n        this.displayDialog = true;\r\n        event.preventDefault();\r\n    }\r\n}\r\n","<!-- <div class=\"ui items\" *ngFor=\"let country of countries\">\r\n    <div class=\"item\">\r\n        <div class=\"image\">\r\n            <img [src]=\"country.countryInfo.flag\">\r\n        </div>\r\n        <div class=\"content\">\r\n            <a class=\"header\">{{country.country}}</a>\r\n            <div class=\"meta\">\r\n                <span>Description</span>\r\n            </div>\r\n            <div class=\"description\">\r\n                <p></p>\r\n            </div>\r\n            <div class=\"extra\">\r\n                Additional Details\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div> -->\r\n\r\n\r\n<p-dataView #dv [value]=\"countries\" [paginator]=\"true\" [rows]=\"20\" paginatorPosition=\"both\" filterBy=\"country\"\r\n    [sortField]=\"sortField\" [sortOrder]=\"sortOrder\">\r\n    <p-header>\r\n        <div class=\"ui-helper-clearfix\">\r\n            <div class=\"ui-g\">\r\n                <div class=\"ui-g-12 ui-md-4\">\r\n                    <p-dropdown [options]=\"sortOptions\" [(ngModel)]=\"sortKey\" placeholder=\"Sort By\"\r\n                        (onChange)=\"onSortChange($event)\" [style]=\"{'min-width':'140px'}\"></p-dropdown>\r\n                </div>\r\n                <div class=\"ui-g-6 ui-md-4 filter-container\">\r\n                    <div style=\"position:relative\">\r\n                        <input type=\"search\" pInputText placeholder=\"Search by Country\"\r\n                            (input)=\"dv.filter($event.target.value)\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"ui-g-6 ui-md-4\" style=\"text-align:right\">\r\n                    <p-dataViewLayoutOptions></p-dataViewLayoutOptions>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </p-header>\r\n\r\n    <!-- ListView -->\r\n    <ng-template let-country pTemplate=\"listItem\">\r\n        <div class=\"ui-g-12\">\r\n            <div class=\"country-details\">\r\n                <div>\r\n                    <div class=\"ui-g-3\">\r\n                        <img [src]=\"country.countryInfo.flag\" height=\"90px\" width=\"90px\">\r\n                    </div>\r\n\r\n                    <div class=\"ui-g-8\">\r\n                        <div class=\"ui-g-12\">Updated: <b>{{country.updated | date:'medium'}}</b></div>\r\n                        <div class=\"ui-g-12\">Cases: <b>{{country.cases}}</b></div>\r\n                        <div class=\"ui-g-12\">Deaths: <b>{{country.deaths}}</b></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"ui-g-1\">\r\n                    <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"selectCountry($event, country)\"></button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <!-- GridView -->\r\n    <ng-template let-country pTemplate=\"gridItem\">\r\n        <div style=\"padding:.5em\" class=\"ui-g-12 ui-md-3\">\r\n            <p-panel [header]=\"country.country\" [style]=\"{'text-align':'center'}\">\r\n                <img [src]=\"country.countryInfo.flag\" width=\"60\">\r\n                <div class=\"car-detail\">{{country.country}} ({{country.countryInfo.iso2}}) </div>\r\n                <hr class=\"ui-widget-content\" style=\"border-top:0\">\r\n                <button pButton type=\"button\" icon=\"pi pi-search\" (click)=\"selectCountry($event, country)\"\r\n                    style=\"margin-top:0\"></button>\r\n            </p-panel>\r\n        </div>\r\n    </ng-template>\r\n</p-dataView>\r\n\r\n<p-dialog header=\"{{selectedCountry.country}} Details\" [(visible)]=\"displayDialog\" [responsive]=\"true\" showEffect=\"fade\"\r\n    [modal]=\"true\" [style]=\"{width: '380px'}\" (onAfterHide)=\"onDialogHide()\">\r\n    <div class=\"ui-g\" *ngIf=\"selectedCountry\">\r\n        <div class=\"ui-g-12\" style=\"text-align:center\">\r\n            <img [src]=\"selectedCountry.countryInfo.flag\">\r\n        </div>\r\n        <div class=\"ui-g-4\">Updated: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.updated | date: 'medium'}}</div>\r\n\r\n        <div class=\"ui-g-4\">Cases: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.cases}}</div>\r\n\r\n        <div class=\"ui-g-4\">Today's Cases: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.todayCases}}</div>\r\n\r\n        <div class=\"ui-g-4\">Total deaths: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.deaths}}</div>\r\n\r\n        <div class=\"ui-g-4\">Today's deaths: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.todayDeaths}}</div>\r\n\r\n        <div class=\"ui-g-4\">Recovered: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.recovered}}</div>\r\n\r\n        <div class=\"ui-g-4\">Active Case: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.active}}</div>\r\n\r\n        <div class=\"ui-g-4\">Critical: </div>\r\n        <div class=\"ui-g-8\">{{selectedCountry.critical}}</div>\r\n    </div>\r\n</p-dialog>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CovidService } from 'src/app/service/covid.service';\r\nimport { GlobalData } from 'src/app/dto/covid.dto';\r\n\r\n@Component({\r\n    templateUrl: 'global.page.html',\r\n    styleUrls: ['global.page.scss']\r\n})\r\n\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class GlobalPage implements OnInit, OnDestroy {\r\n    interV: any;\r\n    global: GlobalData = new GlobalData();\r\n    constructor(private covidService: CovidService) { }\r\n\r\n    ngOnInit() {\r\n        this.interV = setInterval(() => {\r\n            this.getGlobalData();\r\n        }, 5000);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        clearInterval(this.interV);\r\n    }\r\n\r\n    getGlobalData() {\r\n        this.covidService.getAllGlobalInfo(data => {\r\n            this.global = data;\r\n        }, error => { console.log(error)});\r\n    }\r\n}\r\n","<table class=\"ui celled table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Last Updated</th>\r\n            <th>Cases</th>\r\n            <th>Cases Today</th>\r\n            <th>Deaths</th>\r\n            <th>Recovered</th>\r\n            <th>Active Cases</th>\r\n            <th>Critical</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td data-label=\"Updated\">{{global.updated | date:'medium'}}</td>\r\n            <td data-label=\"Cases\">{{global.cases | number}}</td>\r\n            <td data-label=\"CasesToday\">{{global.todayCases | number}}</td>\r\n            <td>{{global.deaths | number}}</td>\r\n            <td>{{global.recovered | number}}</td>\r\n            <td>{{global.active | number}}</td>\r\n            <td>{{global.critical | number}}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { NgModule } from '@angular/core';\r\nimport { GlobalPage } from './global/globa.page';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { CountriesPage } from './countries/countries.page';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {DataViewModule} from 'primeng/dataview';\r\nimport {PanelModule} from 'primeng/panel';\r\nimport {ButtonModule} from 'primeng/button';\r\nimport {InputTextModule} from 'primeng/inputtext';\r\nimport {DropdownModule} from 'primeng/dropdown';\r\nimport {DialogModule} from 'primeng/dialog';\r\n\r\n\r\n@NgModule({\r\n    imports: [\r\n        AppRoutingModule,\r\n        DataViewModule,\r\n        CommonModule,\r\n        FormsModule,\r\n        PanelModule,\r\n        ButtonModule,\r\n        InputTextModule,\r\n        DropdownModule,\r\n        DialogModule,\r\n    ],\r\n    exports: [\r\n        GlobalPage,\r\n        CountriesPage\r\n    ],\r\n    declarations: [\r\n        GlobalPage,\r\n        CountriesPage\r\n    ],\r\n    providers: [],\r\n})\r\nexport class PageModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nconst ROOT_PATH  = 'https://corona.lmao.ninja/';\r\n@Injectable({providedIn: 'root'})\r\nexport class CovidService {\r\n    constructor(private httpClient: HttpClient) {\r\n    }\r\n\r\n    getAllGlobalInfo(successCallback, failedCallback) {\r\n        this.httpClient.get(ROOT_PATH + 'all').subscribe( data => {\r\n            successCallback(data);\r\n        });\r\n    }\r\n\r\n    getAllCountries(successCallback, failedCallback) {\r\n        this.httpClient.get(ROOT_PATH + 'countries?sort=country').subscribe( data => {\r\n            successCallback(data);\r\n        });\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}